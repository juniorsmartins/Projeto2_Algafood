CREATE TABLE IF NOT EXISTS estados(
	id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	nome varchar(100) NOT NULL,

	CONSTRAINT constraint_check_nome_estado CHECK(nome <> ''),
	CONSTRAINT constraint_unique_nome_estado UNIQUE(nome)
);

CREATE TABLE IF NOT EXISTS cidades(
	id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	nome varchar(100) NOT NULL,
	estado_id bigint NOT NULL,

	CONSTRAINT constraint_check_nome_cidade CHECK(nome <> ''),
	CONSTRAINT constraint_unique_nome_cidade UNIQUE(nome),
	CONSTRAINT fk_estado_id_cidade FOREIGN KEY(estado_id) REFERENCES estados(id)
);

CREATE TABLE IF NOT EXISTS cozinhas(
	id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	nome varchar(100) NOT NULL CHECK(nome <> '')
);

CREATE TABLE IF NOT EXISTS restaurantes(
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(100) NOT NULL,
    taxa_frete DECIMAL(10,2) DEFAULT 0.00 NOT NULL,
    data_cadastro TIMESTAMP NOT NULL,
    data_atualizacao TIMESTAMP,
    cozinha_id bigint NOT NULL,

    endereco_cep VARCHAR(15) NOT NULL,
    endereco_bairro VARCHAR(100) NOT NULL,
    endereco_logradouro VARCHAR(150) NOT NULL,
    endereco_numero VARCHAR(10) NOT NULL,
    endereco_complemento VARCHAR(250),
    endereco_cidade_id bigint NOT NULL,

    CONSTRAINT constraint_check_nome_restaurante CHECK(nome <> ''),
    CONSTRAINT fk_endereco_cidade_id_restaurante FOREIGN KEY(endereco_cidade_id) REFERENCES cidades(id),
    CONSTRAINT fk_cozinha_id_restaurante FOREIGN KEY(cozinha_id) REFERENCES cozinhas(id)
);

CREATE TABLE IF NOT EXISTS usuarios (
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(150) NOT NULL,
    senha VARCHAR(100) NOT NULL,
    data_cadastro TIMESTAMP NOT NULL,

    CONSTRAINT constraint_check_nome_usuario CHECK(nome <> ''),
    CONSTRAINT constraint_check_email_usuario CHECK(email <> ''),
    CONSTRAINT constraint_unique_email_usuario UNIQUE(email),
    CONSTRAINT constraint_check_senha_usuario CHECK(senha <> '')
);

CREATE TABLE IF NOT EXISTS formas_pagamento(
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    descricao VARCHAR(250) NOT NULL,

    CONSTRAINT constraint_check_descricao_forma_pagamento CHECK(descricao <> '')
);

CREATE TYPE status_pedido_enum AS ENUM(
    'CRIADO',
    'CONFIRMADO',
    'ENTREGUE',
    'CANCELADO'
);

CREATE TABLE IF NOT EXISTS pedidos(
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    subtotal DECIMAL(10,2) NOT NULL,
    taxa_frete DECIMAL(10,2) DEFAULT 0.00 NOT NULL,
    valor_total DECIMAL(10,2) NOT NULL,
    data_hora_criacao TIMESTAMP NOT NULL,
    data_confirmacao TIMESTAMP,
    data_cancelamento TIMESTAMP,
    data_entrega TIMESTAMP,
    status_pedido status_pedido_enum NOT NULL,
    forma_pagamento_id bigint NOT NULL,
    restaurante_id bigint NOT NULL,
    usuario_id bigint NOT NULL,

    endereco_cep VARCHAR(15) NOT NULL,
    endereco_bairro VARCHAR(100) NOT NULL,
    endereco_logradouro VARCHAR(150) NOT NULL,
    endereco_numero VARCHAR(10) NOT NULL,
    endereco_complemento VARCHAR(250),
    endereco_cidade_id bigint NOT NULL,

    CONSTRAINT fk_forma_pagamento_id_pedido FOREIGN KEY(forma_pagamento_id) REFERENCES formas_pagamento(id),
    CONSTRAINT fk_restaurante_id_pedido FOREIGN KEY(restaurante_id) REFERENCES restaurantes(id),
    CONSTRAINT fk_usuario_id_pedido FOREIGN KEY(usuario_id) REFERENCES usuarios(id),
    CONSTRAINT fk_address_cidade_id_pedido FOREIGN KEY(endereco_cidade_id) REFERENCES cidades(id)
);

CREATE TABLE IF NOT EXISTS produtos(
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(100) NOT NULL,
    descricao VARCHAR(250),
    preco DECIMAL(10,2) NOT NULL,
    ativo boolean NOT NULL,
    restaurante_id bigint NOT NULL,

    CONSTRAINT constraint_check_nome_produto CHECK(nome <> ''),
    CONSTRAINT constraint_unique_nome_produto UNIQUE(nome),
    CONSTRAINT fk_restaurante_id_produto FOREIGN KEY(restaurante_id) REFERENCES restaurantes(id)
);

CREATE TABLE IF NOT EXISTS itens_pedido(
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    quantidade INTEGER NOT NULL,
    preco_unitario DECIMAL(10,2) NOT NULL,
    preco_total DECIMAL(10,2) NOT NULL,
    observacao VARCHAR(250),
    pedido_id bigint NOT NULL,
    produto_id bigint NOT NULL,

    CONSTRAINT fk_pedido_id_item_pedido FOREIGN KEY(pedido_id) REFERENCES pedidos(id),
    CONSTRAINT fk_produto_id_item_pedido FOREIGN KEY(produto_id) REFERENCES produtos(id),
    CONSTRAINT constraint_unique_pedidoproduto_itens_pedido UNIQUE(pedido_id, produto_id)
);

CREATE TABLE IF NOT EXISTS enderecos(
	id bigint CONSTRAINT pk_endereco_id PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	cep varchar(10) NOT NULL, 
	logradouro varchar(200) NOT NULL, 
	numero varchar(10),
	complemento varchar(250),
	bairro varchar(100) NOT NULL,
	cidade_id bigint,

);

CREATE TABLE IF NOT EXISTS restaurantes_formas_pagamento(
    restaurante_id bigint NOT NULL,
    forma_pagamento_id bigint NOT NULL,

    CONSTRAINT fk_restaurante_id_restaurante FOREIGN KEY(restaurante_id) REFERENCES restaurantes(id),
    CONSTRAINT fk_forma_pagamento_id_restaurante FOREIGN KEY(forma_pagamento_id) REFERENCES formas_pagamento(id),
    CONSTRAINT pk_restaurante_forma_pagamento PRIMARY KEY(restaurante_id, forma_pagamento_id)
);

ALTER TABLE IF EXISTS restaurantes ADD ativo boolean;
UPDATE restaurantes SET ativo = true;
ALTER TABLE IF EXISTS restaurantes ALTER COLUMN ativo SET NOT NULL;





insert into cozinhas(id, nome) values(7, 'Bulgara');
insert into cozinhas(nome) values('Bulgara');

select * from usuarios;
select * from estados;
select * from cidades;
select * from cozinhas;
select * from restaurantes;
select * from pedidos;
select * from itens_pedido;
select * from produtos;
select * from flyway_schema_history;

insert into produtos values(1, 'Laranja', 'fruta tropical', 15, true, 2);
insert into usuarios values(1, 'Robert Martin', 'bob@email.com', '123', Now());

