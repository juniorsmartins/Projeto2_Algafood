# --------------------------------------------------
# Config Postgres
# --------------------------------------------------
# URL de conex�o do banco de dados
spring.datasource.url=jdbc:postgresql://localhost:5432/algafoods?createDatabaseIfNotExist=true&serverTimezone=UTC
# Usu�rio e senha de conex�o com o banco de dados
spring.datasource.username=postgres
spring.datasource.password=postgres
# --------------------------------------------------


# --------------------------------------------------
# Config de Pool de Conex�es
# --------------------------------------------------
# Define quantidade m�xima de conex�es para o pool
spring.datasource.hikari.maximum-pool-size=5
# Define quantidade m�nima de conex�es para o pool
spring.datasource.hikari.minimum-idle=3
# Define tempo limite de ociosidade para conex�es excedentes (ex: 10 segundos = 10000)
spring.datasource.hikari.idle-timeout=10000
# --------------------------------------------------


# --------------------------------------------------
# Config JPA e Hibernate
# --------------------------------------------------
spring.jpa.database=POSTGRESQL
# O hibernate cria e deleta tabelas automaticamente (comentados para adi��o de migration - Flyway)
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.generate-ddl=true

# Informa ao JPA e ao Hibernate qual � o Dialeto do banco de dados
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect

# Configura��o do Hibernate para reconhecer nome de tabelas em caixa alta
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# --------------------------------------------------



# --------------------------------------------------
# Config Flyway
# --------------------------------------------------
# define em quais pastas procurar arquivos para Flyway (aqui coloquei dois - um para scripts e outro para inje��o de dados)
spring.flyway.locations=classpath:db/migration, classpath:db/data

# Criando migra��o a partir de DDL gerado por schema generation (cria scripts a partir do ORM, mas n�o aplica.
# Voc� pode copiar e colar no Flyway (� uma facilidade). A segunda anota��o diz o local onde devem ser colocados).
# IMPORTANTE - execute isso apenas uma vez. Depois desabilite.
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
# --------------------------------------------------



# --------------------------------------------------
# Configura��es de log
# --------------------------------------------------
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# --------------------------------------------------



# --------------------------------------------------
# Tratamento de Exceptions
# --------------------------------------------------
# Permite lan�ar exce��o no momento da deserializa��o. Quando a requisi��o chega na API para se tornar objeto/dto. Dessa
# forma, tratar essa exce��o e impedir receber Json com campos n�o existentes no objeto (que seriam ignorados).
spring.jackson.deserialization.fail-on-unknown-properties=true
# Permite lan�ar exce��o no momento da deserializa��o. Quando a requisi��o chega na API para se tornar objeto e possui
# algum campo do DTO anotado com @JsonIgnore.
spring.jackson.deserialization.fail-on-ignored-properties=true
# --------------------------------------------------

